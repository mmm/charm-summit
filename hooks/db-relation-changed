#!/bin/bash

database_user=`relation-get user`
database_password=`relation-get password`
database_host=`relation-get host`
database_name=`relation-get database`
database_port="5432"
secret_key=`cat $CHARM_DIR/SECRET_KEY`
# All values are set together, so checking on a single value is enough
# If $user is not set, DB is still setting itself up, we exit awaiting next run
[ -z "$database_user" ] && exit 0

service_hostname=`config-get service-hostname`
site_root="http://$service_hostname"
theme_media="/srv/$service_hostname/project/media"

FACTER_database_user=$database_user \
FACTER_database_password=$database_password \
FACTER_database_host=$database_host \
FACTER_database_name=$database_name \
FACTER_database_port=$database_port \
FACTER_service_hostname=$service_hostname \
FACTER_secret_key=$secret_key \
FACTER_site_root=$site_root \
FACTER_theme_media=$theme_media \
puppet apply $PWD/manifests/database_settings.pp

remove_south() {
  local project_dir="/srv/$service_hostname/project"
  local settings_file="$project_dir/settings.py"
  sed -i "s/\('south',\)/#\1/" $settings_file
}
remove_south

configure_database() {
  local settings_file="ubuntu_settings"
  local project_dir="/srv/$service_hostname/project"
  cd $project_dir && python ./manage.py init-summit --settings=$settings_file
  cd $project_dir && python ./manage.py pullapps --settings=$settings_file
  cd $project_dir && python ./manage.py syncdb --noinput --settings=$settings_file
}
configure_database

add_menu() {
  local settings_file="ubuntu_settings"
  local project_dir="/srv/$service_hostname/project"
  local command="from common.models import Menu; Menu.objects.create(name='UDS', slug='uds', site_id=1)"
  cd $project_dir 
  echo $command | python ./manage.py shell --settings=$settings_file
}
add_menu

add_superuser() {
  local settings_file="ubuntu_settings"
  local project_dir="/srv/$service_hostname/project"
  local user=`config-get admin-user`
  local password=`config-get admin-password`
  local command="from django.contrib.auth.models import User; User.objects.create_superuser('$user', 'me@aol.com', '$password')"
  cd $project_dir 
  echo $command | python ./manage.py shell --settings=$settings_file
}
add_superuser

open-port 80/tcp

service apache2 restart

