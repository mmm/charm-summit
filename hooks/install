#!/bin/bash
set -eux # -x for verbose logging to juju debug-log

[ -f lib/ch-file.sh ] && . lib/ch-file.sh

# We want to use the vcsrepo resource type, and it seems the
# best way to install that is via the puppet-module tool.
apt-get -y install puppet
# Default vcsrepo 0.0.4 suffers from http://projects.puppetlabs.com/issues/9083
# (I've commented on and re-opened the above bug.
apt-get -y install rubygems
gem install puppet-module
puppet-module install puppetlabs-vcsrepo --version=0.0.3 --force
rm -rf /etc/puppet/modules/vcsrepo/
mv vcsrepo /etc/puppet/modules

juju-log "Getting config options"
app_source=`config-get app-source`
app_source_type=`config-get app-source-type`
app_source_revision=`config-get app-branch-revision`
app_source_package_name=`config-get app-source-package-name`
service_hostname=`config-get service-hostname`
additional_debian_packages=`config-get additional-debian-packages`
additional_pip_packages=`config-get additional-pip-packages`
app_source_project_location=`config-get app-source-project-location`

# Only here because I can't find a way to turn a config string into
# the required list for the puppet manifest (tried "pkg1 pkg2".split)
# for both apt and pip resource types.
if [ "$additional_debian_packages" ]; then
    juju-log "Installing extra debian packages: $additional_debian_packages"
    sudo apt-get -y install $additional_debian_packages
fi
if [ "$additional_pip_packages" ]; then
    juju-log "Installing extra pip packages: $additional_pip_packages"
    sudo pip install $additional_pip_packages
fi

juju-log "Initialising machine state."
FACTER_service_hostname=$service_hostname \
FACTER_app_source=$app_source \
FACTER_app_source_type=$app_source_type \
FACTER_app_source_revision=$app_source_revision \
FACTER_app_source_package_name=$app_source_package_name \
FACTER_app_source_project_location=$app_source_project_location \
FACTER_charm_dir=$PWD \
puppet apply $PWD/manifests/initial_state.pp

FACTER_service_hostname=$service_hostname \
puppet apply $PWD/manifests/apache-wsgi.pp

clean_up_apache() {
  rm -f /etc/apache2/sites-enabled/000-default
}
clean_up_apache

pip_install() {
  local source_dir="/srv/$service_hostname"
  pip install -r $source_dir/requirements.txt
  #python2.6 /usr/bin/pip install -r $source_dir/requirements.txt
	apt-get install python2.6 python2.6-dev python-virtualenv libjs-jquery libjs-jquery-ui iso-codes python-django python-django-openid-auth python-django-south python-beautifulsoup python-psycopg2 python-openid python-tz python-simplejson
}
pip_install
#MMM idempotency?

generate_secret_key() {
  secret_key=`echo $RANDOM | md5sum | awk '{print $1}'`
  echo $secret_key > $CHARM_DIR/SECRET_KEY
}
[ -f $CHARM_DIR/SECRET_KEY ] || generate_secret_key

install_custom_django_commands() {
  juju-log "ugh"
}
install_custom_django_commands

install_site_theme() {
  local project_dir="/srv/$service_hostname/summit"
  theme_branch=`config-get app-theme-branch`
  branch_target=$project_dir/ubuntu_website
  rm -Rf $branch_target
  ( cd $project_dir && bzr branch $theme_branch $branch_target )
}
install_site_theme

